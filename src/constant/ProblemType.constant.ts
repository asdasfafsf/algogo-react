export const PROBLEM_TYPE_MAP = {
  수학: '수학',
  구현: '구현',
  다이나믹_프로그래밍: '다이나믹 프로그래밍',
  자료_구조: '자료 구조',
  그래프_이론: '그래프 이론',
  그리디_알고리즘: '그리디 알고리즘',
  문자열: '문자열',
  브루트포스_알고리즘: '브루트포스 알고리즘',
  그래프_탐색: '그래프 탐색',
  정렬: '정렬',
  기하학: '기하학',
  애드_혹: '애드 혹',
  정수론: '정수론',
  트리: '트리',
  세그먼트_트리: '세그먼트 트리',
  이분_탐색: '이분 탐색',
  사칙연산: '사칙연산',
  시뮬레이션: '시뮬레이션',
  너비_우선_탐색: '너비 우선 탐색',
  해_구성하기: '해 구성하기',
  누적_합: '누적 합',
  조합론: '조합론',
  많은_조건_분기: '많은 조건 분기',
  깊이_우선_탐색: '깊이 우선 탐색',
  비트마스킹: '비트마스킹',
  해시를_사용한_집합과_맵: '해시를 사용한 집합과 맵',
  데이크스트라: '데이크스트라',
  백트래킹: '백트래킹',
  트리를_사용한_집합과_맵: '트리를 사용한 집합과 맵',
  최단_경로: '최단 경로',
  스위핑: '스위핑',
  분리_집합: '분리 집합',
  파싱: '파싱',
  우선순위_큐: '우선순위 큐',
  트리에서의_다이나믹_프로그래밍: '트리에서의 다이나믹 프로그래밍',
  분할_정복: '분할 정복',
  두_포인터: '두 포인터',
  스택: '스택',
  매개_변수_탐색: '매개 변수 탐색',
  게임_이론: '게임 이론',
  최대_유량: '최대 유량',
  소수_판정: '소수 판정',
  느리게_갱신되는_세그먼트_트리: '느리게 갱신되는 세그먼트 트리',
  비트필드를_이용한_다이나믹_프로그래밍:
      '비트필드를 이용한 다이나믹 프로그래밍',
  확률론: '확률론',
  분할_정복을_이용한_거듭제곱: '분할 정복을 이용한 거듭제곱',
  임의_정밀도_큰_수_연산: '임의 정밀도 / 큰 수 연산',
  오프라인_쿼리: '오프라인 쿼리',
  배낭_문제: '배낭 문제',
  재귀: '재귀',
  값_좌표_압축: '값 / 좌표 압축',
  런타임_전의_전처리: '런타임 전의 전처리',
  최소_스패닝_트리: '최소 스패닝 트리',
  에라토스테네스의_체: '에라토스테네스의 체',
  이분_매칭: '이분 매칭',
  유클리드_호제법: '유클리드 호제법',
  볼록_껍질: '볼록 껍질',
  선형대수학: '선형대수학',
  위상_정렬: '위상 정렬',
  플로이드_워셜: '플로이드–워셜',
  해싱: '해싱',
  최소_공통_조상: '최소 공통 조상',
  포함_배제의_원리: '포함 배제의 원리',
  강한_연결_요소: '강한 연결 요소',
  무작위화: '무작위화',
  희소_배열: '희소 배열',
  방향_비순환_그래프: '방향 비순환 그래프',
  고속_푸리에_변환: '고속 푸리에 변환',
  작은_집합에서_큰_집합으로_합치는_테크닉:
      '작은 집합에서 큰 집합으로 합치는 테크닉',
  트라이: '트라이',
  덱: '덱',
  최소_비용_최대_유량: '최소 비용 최대 유량',
  선분_교차_판정: '선분 교차 판정',
  제곱근_분할법: '제곱근 분할법',
  미적분학: '미적분학',
  휴리스틱: '휴리스틱',
  모듈로_곱셈_역원: '모듈로 곱셈 역원',
  볼록_껍질을_이용한_최적화: '볼록 껍질을 이용한 최적화',
  슬라이딩_윈도우: '슬라이딩 윈도우',
  삼차원_기하학: '3차원 기하학',
  접미사_배열과_lcp_배열: '접미사 배열과 lcp 배열',
  오일러_경로_테크닉: '오일러 경로 테크닉',
  센트로이드: '센트로이드',
  스프라그_그런디_정리: '스프라그–그런디 정리',
  삼분_탐색: '삼분 탐색',
  중간에서_만나기: '중간에서 만나기',
  비트_집합: '비트 집합',
  가장_긴_증가하는_부분_수열_o_n_log_n:
      '가장 긴 증가하는 부분 수열: o(n log n)',
  피타고라스_정리: '피타고라스 정리',
  순열_사이클_분할: '순열 사이클 분할',
  kmp: 'kmp',
  가우스_소거법: '가우스 소거법',
  heavy_light_분할: 'heavy-light 분할',
  센트로이드_분할: '센트로이드 분할',
  최대_유량_최소_컷_정리: '최대 유량 최소 컷 정리',
  다각형의_넓이: '다각형의 넓이',
  큐: '큐',
  오일러_경로: '오일러 경로',
  물리학: '물리학',
  기댓값의_선형성: '기댓값의 선형성',
  페르마의_소정리: '페르마의 소정리',
  외판원_순회_문제: '외판원 순회 문제',
  two_sat: '2-sat',
  단절점과_단절선: '단절점과 단절선',
  zero_one_너비_우선_탐색: '0-1 너비 우선 탐색',
  이분_그래프: '이분 그래프',
  퍼시스턴트_세그먼트_트리: '퍼시스턴트 세그먼트 트리',
  이중_연결_요소: '이중 연결 요소',
  비둘기집_원리: '비둘기집 원리',
  중국인의_나머지_정리: '중국인의 나머지 정리',
  연결_리스트: '연결 리스트',
  선인장: '선인장',
  평면_그래프: '평면 그래프',
  벨만_포드: '벨만–포드',
  볼록_다각형_내부의_점_판정: '볼록 다각형 내부의 점 판정',
  스플레이_트리: '스플레이 트리',
  오일러_피_함수: '오일러 피 함수',
  병렬_이분_탐색: '병렬 이분 탐색',
  분할_정복을_사용한_최적화: '분할 정복을 사용한 최적화',
  확장_유클리드_호제법: '확장 유클리드 호제법',
  mos: "mo's",
  아호_코라식: '아호-코라식',
  회전하는_캘리퍼스: '회전하는 캘리퍼스',
  덱을_이용한_다이나믹_프로그래밍: '덱을 이용한 다이나믹 프로그래밍',
  오일러_지표: '오일러 지표 (χ=v-e+f)',
  다차원_세그먼트_트리: '다차원 세그먼트 트리',
  정규_표현식: '정규 표현식',
  반평면_교집합: '반평면 교집합',
  함수_개형을_이용한_최적화: '함수 개형을 이용한 최적화',
  벌리캠프_매시: '벌리캠프–매시',
  매내처: '매내처',
  폴라드_로: '폴라드 로',
  커넥션_프로파일을_이용한_다이나믹_프로그래밍:
      '커넥션 프로파일을 이용한 다이나믹 프로그래밍',
  덱을_이용한_구간_최댓값_트릭: '덱을 이용한 구간 최댓값 트릭',
  링크_컷_트리: 'リンク/컷 트리',
  트리_동형_사상: '트리 동형 사상',
  머지_소트_트리: '머지 소트 트리',
  담금질_기법: '담금질 기법',
  홀의_결혼_정리: '홀의 결혼 정리',
  헝가리안: '헝가리안',
  밀러_라빈_소수_판별법: '밀러–라빈 소수 판별법',
  뫼비우스_반전_공식: '뫼비우스 반전 공식',
  라빈_카프: '라빈–카프',
  수치해석: '수치해석',
  플러드_필: '플러드 필',
  오프라인_동적_연결성_판정: '오프라인 동적 연결성 판정',
  오목_다각형_내부의_점_판정: '오목 다각형 내부의 점 판정',
  선형_계획법: '선형 계획법',
  생성_함수: '생성 함수',
  aliens_트릭: 'aliens 트릭',
  통계학: '통계학',
  함수형_그래프: '함수형 그래프',
  서큘레이션: '서큘레이션',
  트리_압축: '트리 압축',
  부분집합의_합_다이나믹_프로그래밍: '부분집합의 합 다이나믹 프로그래밍',
  보로노이_다이어그램: '보로노이 다이어그램',
  쌍대성: '쌍대성',
  쌍대_그래프: '쌍대 그래프',
  매트로이드: '매트로이드',
  뤼카_정리: '뤼카 정리',
  키타마사: '키타마사',
  일반적인_매칭: '일반적인 매칭',
  데카르트_트리: '데카르트 트리',
  최소_외접원: '최소 외접원',
  트리_분할: '트리 분할',
  번사이드_보조정리: '번사이드 보조정리',
  양방향_탐색: '양방향 탐색',
  차원_기하학: '4차원 이상의 기하학',
  이산_로그: '이산 로그',
  자릿수를_이용한_다이나믹_프로그래밍: '자릿수를 이용한 다이나믹 프로그래밍',
  z_알고리즘: 'z',
  탑_트리: '탑 트리',
  단조_큐를_이용한_최적화: '단조 큐를 이용한 최적화',
  픽의_정리: '픽의 정리',
  utf8_입력_처리: 'utf-8 입력 처리',
  델로네_삼각분할: '델로네 삼각분할',
  회문_트리: '회문 트리',
  도미네이터_트리: '도미네이터 트리',
  크누스_x: '크누스 x',
  안정_결혼_문제: '안정 결혼 문제',
  크누스_최적화: '크누스 최적화',
  베이즈_정리: '베이즈 정리',
  로프: '로프',
  춤추는_링크: '춤추는 링크',
  차분_공격: '차분 공격',
  차수열: '차수열',
  이산_제곱근: '이산 제곱근',
  히르쉬버그: '히르쉬버그',
  접미사_트리: '접미사 트리',
  현_그래프: '현 그래프',
  경사_하강법: '경사 하강법',
  다항식_보간법: '다항식 보간법',
  유향_최소_신장_트리: '유향 최소 신장 트리',
  스토어_바그너: '스토어–바그너',
  그린_정리: '그린 정리',
  도형에서의_불_연산: '도형에서의 불 연산',
  린드스트롬_게셀_비엔노_보조정리: '린드스트롬–게셀–비엔노 보조정리',
  보이어_무어_다수결_투표: '보이어–무어 다수결 투표',
  다중_대입값_계산: '다중 대입값 계산',
  생일_문제: '생일 문제',
  하켄부시_게임: '하켄부시 게임',
  지수승강_보조정리: '지수승강 보조정리',
  레드_블랙_트리: '레드-블랙 트리',
  이산_k제곱근: '이산 k제곱근',
  유리_등차수열의_내림_합: '유리 등차수열의 내림 합',
} as const;

export const PROBLEM_TYPE_KEYS = Object.keys(PROBLEM_TYPE_MAP);
